<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jch.introductoryadmin.dao.UserDao">

    <resultMap type="com.jch.introductoryadmin.domain.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="INTEGER"/>
        <result property="avatar" column="avatar" jdbcType="VARCHAR"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
    </resultMap>
    <resultMap type="com.jch.introductoryadmin.domain.Role" id="RoleMap">
        <result property="roleId" column="role_id" jdbcType="INTEGER"/>
        <result property="roleName" column="role_name" jdbcType="VARCHAR"/>
        <result property="roleDesc" column="role_desc" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="selectSQL">
        select
          id, username, password, email, phone, status, avatar, deleted from x_user
    </sql>
    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        <include refid="selectSQL"/>  
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        <include refid="selectSQL"/>
        <where>
            <if test="user != null">
                <if test="user.id != null">
                    and id = #{user.id}
                </if>
                <if test="user.username != null and user.username != ''">
                    and username = #{user.username}
                </if>
                <if test="user.password != null and user.password != ''">
                    and password = #{user.password}
                </if>
                <if test="user.email != null and user.email != ''">
                    and email = #{user.email}
                </if>
                <if test="user.phone != null and user.phone != ''">
                    and phone = #{user.phone}
                </if>
                <if test="user.status != null">
                    and status = #{user.status}
                </if>
                <if test="user.avatar != null and user.avatar != ''">
                    and avatar = #{user.avatar}
                </if>
                <if test="user.deleted != null">
                    and deleted = #{user.deleted}
                </if>
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from x_user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="phone != null and phone != ''">
                and phone = #{phone}
            </if>
            <if test="status != null">
                and status = #{status}
            </if>
            <if test="avatar != null and avatar != ''">
                and avatar = #{avatar}
            </if>
            <if test="deleted != null">
                and deleted = #{deleted}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into x_user(username, password, email, phone, status, avatar, deleted)
        values (#{username}, #{password}, #{email}, #{phone}, #{status}, #{avatar}, #{deleted})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into x_user(username, password, email, phone, status, avatar, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.phone}, #{entity.status}, #{entity.avatar}, #{entity.deleted})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into x_user(username, password, email, phone, status, avatar, deleted)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.username}, #{entity.password}, #{entity.email}, #{entity.phone}, #{entity.status}, #{entity.avatar}, #{entity.deleted})
        </foreach>
        on duplicate key update
        username = values(username),
        password = values(password),
        email = values(email),
        phone = values(phone),
        status = values(status),
        avatar = values(avatar),
        deleted = values(deleted)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update x_user
        <set>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="phone != null and phone != ''">
                phone = #{phone},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="avatar != null and avatar != ''">
                avatar = #{avatar},
            </if>
            <if test="deleted != null">
                deleted = #{deleted},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from x_user where id = #{id}
    </delete>

    <!--通过用户名查找-->
    <select id="selectByUsername" resultMap="UserMap">
        <include refid="selectSQL"/>
        where username = #{username}
    </select>
    <!--通过用户id查找用户权限列表-->
    <select id="getUserRole" resultMap="RoleMap">
        select r.role_id, r.role_name, r.role_desc
            from x_role r
            right join x_user_role ur on r.role_id = ur.role_id
            where ur.user_id = #{userId}
    </select>
</mapper>

